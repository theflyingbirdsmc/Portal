name: Backstage Dev
on:
  push:
    branches:
      - main
    paths:
      - '.devcontainer/**'
jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
    
      # Login to Harbor
      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .devcontainer/ # specifying the directory where your Dockerfile is
          push: true
          tags: ${{ secrets.HARBOR_DOCKER_REGISTRY }}/backstage-dev:latest # change this to your image name
          build-args: |
            LOCAL_AUTH_GITHUB_CLIENT_ID=${{secrets.LOCAL_AUTH_GITHUB_CLIENT_ID}}
            LOCAL_AUTH_GITHUB_CLIENT_SECRET=${{secrets.LOCAL_AUTH_GITHUB_CLIENT_SECRET}}
            BACKEND_SECRET=${{ secrets.BACKEND_SECRET }}
            BAC_BOT_TOKEN=${{ secrets.BAC_BOT_TOKEN }}
            TFB_APP_ID=${{ secrets.TFB_APP_ID }}
            TFB_APP_WEBHOOKURL=${{ secrets.TFB_APP_WEBHOOKURL }}
            TFB_APP_CLIENT_ID=${{ secrets.TFB_APP_CLIENT_ID }}
            TFB_APP_CLIENT_SECRET=${{ secrets.TFB_APP_CLIENT_SECRET }}
            TFB_APP_WEBHOOK_SECRET=${{ secrets.TFB_APP_WEBHOOK_SECRET }}
            TFB_APP_PRIVATE_KEY_0=${{ secrets.TFB_APP_PRIVATE_KEY_0 }}
            TFB_APP_PRIVATE_KEY_1=${{ secrets.TFB_APP_PRIVATE_KEY_1 }}
            TFB_APP_PRIVATE_KEY_2=${{ secrets.TFB_APP_PRIVATE_KEY_2 }}
            TFB_APP_PRIVATE_KEY_3=${{ secrets.TFB_APP_PRIVATE_KEY_3 }}
            TFB_APP_PRIVATE_KEY_4=${{ secrets.TFB_APP_PRIVATE_KEY_4 }}
            TFB_APP_PRIVATE_KEY_5=${{ secrets.TFB_APP_PRIVATE_KEY_5 }}
            TFB_APP_PRIVATE_KEY_6=${{ secrets.TFB_APP_PRIVATE_KEY_6 }}
            TFB_APP_PRIVATE_KEY_7=${{ secrets.TFB_APP_PRIVATE_KEY_7 }}
            TFB_APP_PRIVATE_KEY_8=${{ secrets.TFB_APP_PRIVATE_KEY_8 }}
            TFB_APP_PRIVATE_KEY_9=${{ secrets.TFB_APP_PRIVATE_KEY_9 }}
            TFB_APP_PRIVATE_KEY_10=${{ secrets.TFB_APP_PRIVATE_KEY_10 }}
            TFB_APP_PRIVATE_KEY_11=${{ secrets.TFB_APP_PRIVATE_KEY_11 }}
            TFB_APP_PRIVATE_KEY_12=${{ secrets.TFB_APP_PRIVATE_KEY_12 }}
            TFB_APP_PRIVATE_KEY_13=${{ secrets.TFB_APP_PRIVATE_KEY_13 }}
            TFB_APP_PRIVATE_KEY_14=${{ secrets.TFB_APP_PRIVATE_KEY_14 }}
            TFB_APP_PRIVATE_KEY_15=${{ secrets.TFB_APP_PRIVATE_KEY_15 }}
            TFB_APP_PRIVATE_KEY_16=${{ secrets.TFB_APP_PRIVATE_KEY_16 }}
            TFB_APP_PRIVATE_KEY_17=${{ secrets.TFB_APP_PRIVATE_KEY_17 }}
            TFB_APP_PRIVATE_KEY_18=${{ secrets.TFB_APP_PRIVATE_KEY_18 }}
            TFB_APP_PRIVATE_KEY_19=${{ secrets.TFB_APP_PRIVATE_KEY_19 }}
            TFB_APP_PRIVATE_KEY_20=${{ secrets.TFB_APP_PRIVATE_KEY_20 }}
            TFB_APP_PRIVATE_KEY_21=${{ secrets.TFB_APP_PRIVATE_KEY_21 }}
            TFB_APP_PRIVATE_KEY_22=${{ secrets.TFB_APP_PRIVATE_KEY_22 }}
            TFB_APP_PRIVATE_KEY_23=${{ secrets.TFB_APP_PRIVATE_KEY_23 }}
            TFB_APP_PRIVATE_KEY_24=${{ secrets.TFB_APP_PRIVATE_KEY_24 }}
      - name: Get short commit SHA
        if: github.ref == 'refs/heads/main'
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get latest commit title
        if: github.ref == 'refs/heads/main'
        id: message
        run: echo "pr_title=$(git log --format=%s -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Create kubeconfig file
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
        shell: bash

      - name: Setup Terraform
        uses: ./.github/actions/setup-tf

      - name: Terraform init and validate
        run: |
          cd .devcontainer/portal-dev
          terraform init -upgrade
          terraform validate
          
      # Step 2: Install the Coder CLI
      - name: Install Coder CLI
        run: |
          curl -L https://coder.com/install.sh | sh

      # Step 3: Set environment variables and push template
      - name: Push template to Coder
        env:
          CODER_URL: ${{ secrets.CODER_URL }}
          CODER_SESSION_TOKEN: ${{ secrets.CODER_SESSION_TOKEN }}
        run: |
          export CODER_TEMPLATE_NAME=portal
          export CODER_TEMPLATE_DIR=.coder/templates/kubernetes
          export CODER_TEMPLATE_VERSION=$(git rev-parse --short HEAD)

          coder templates push --yes $CODER_TEMPLATE_NAME \
              --directory $CODER_TEMPLATE_DIR \
              --name=$CODER_TEMPLATE_VERSION
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
